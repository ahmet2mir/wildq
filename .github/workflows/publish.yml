name: Publish packages

on:
  push:
    tags:
    - 'v*'

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.draft_release.outputs.id }}
      html_url: ${{ steps.draft_release.outputs.html_url }}
      upload_url: ${{ steps.draft_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: draft_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

  assets:
    name: Release packages
    runs-on: ${{ matrix.os }}
    needs: create_release
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
    steps:
      - name: Check out src from Git
        uses: actions/checkout@v2

      - name: Get history and tags for SCM versioning to work
        run: |
          git fetch --prune --unshallow
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Init environment and build package for GNU/Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y ruby ruby-dev rubygems build-essential
          gem install --user --no-document fpm
          export PATH=/home/runner/.gem/ruby/2.5.0/bin:$PATH
          make init archive-linux package-rpm package-deb

      - name: Init environment and build package for OSX
        if: matrix.os == 'macos-latest'
        run: |
          brew install gnu-tar
          brew install coreutils
          gem install --user --no-document fpm
          make init archive-macos package-brew

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/archives/*.tar.gz
            ./artifacts/rpm/*.rpm
            ./artifacts/deb/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: matrix.os == 'ubuntu-latest'
        with:
          password: ${{ secrets.GH_ACTIONS_WILD }}

  finish_release:
    name: Finish release
    runs-on: ubuntu-latest
    needs: [assets, create_release]
    steps:
      - name: Unset draft
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.create_release.outputs.id }}
