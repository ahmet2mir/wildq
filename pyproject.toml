# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.
[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool]

[tool.poetry]
name = "wildq"
version = "0.0.0" # managed by poetry-dynamic-versioning
description = "Command-line TOML/JSON/INI/YAML/XML processor using jq c bindings."
license = "Apache 2.0"
keywords = [
    "wildq",
    "jq",
    "yaml",
    "json",
    "toml",
    "xml",
    "ini",
    "parser",
    "shell",
    "hcl",
    "color",
    "highlight",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Build Tools",
]
authors = ["Ahmet Demir <me@ahmet2mir.eu>"]
readme = "README.md"
documentation = "https://wildq.readthedocs.io/en/latest"
homepage = "https://github.com/ahmet2mir/wildq"
repository = "https://github.com/ahmet2mir/wildq.git"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance, metadata=[commit]) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance, metadata=[commit]) }}
    {%- endif -%}
"""

[tool.poetry.scripts]
wildq = 'wildq.__main__:main'
wq = 'wildq.__main__:main'

[tool.poetry.urls]
Changelog = "https://github.com/ahmet2mir/wildq/issues"

[tool.poetry-dynamic-versioning.substitution]
files = ["wildq/_wildq_version.py"]

[tool.black]
line-length = 80
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests/data
)/
'''

[tool.isort]
profile = "black"
force_single_line = true
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
src_paths = ["poetry", "tests"]
skip_glob = ["*/setup.py"]
filter_files = true
known_first_party = "poetry"

[tool.poetry.dependencies]
python = ">=3.6,<4.0"
toml = "^0.10.1"
PyYAML = "^5.3.1"
xmltodict = "^0.12.0"
jq = "^1.1.1"
pyhcl = "^0.4.4"
click = "^7.1.2"
Pygments = "^2.7.2"

[tool.poetry.dev-dependencies]
bandit = "^1.6.2"
black = "^20.8b1"
coverage = "^5.3"
flake8 = "^3.8.4"
flake8-bugbear = "^20.1.4"
pyinstaller = "^4.0"
Sphinx = "^3.2.1"
sphinx-rtd-theme = "^0.5.0"
isort = "^5.6.4"
